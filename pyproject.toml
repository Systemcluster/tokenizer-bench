[project]
name = "tokenizer-bench"
description = "Benchmark for tokenizers."
version = "0.0.0"
requires-python = ">=3.12,<3.13"

authors = [{ name = "Christian Sdunek", email = "me@systemcluster.me" }]
urls = { repository = "https://github.com/Systemcluster/tokenizer-bench" }

dependencies = [
    # "kitoken", # vendored
    # "gpt_bpe", # vendored
    "sentencepiece>=0.2.0",
    "tokenizers>=0.19.1",
    "tiktoken>=0.7.0",
    "mistral-common>=1.3.3",
    "scipy>=1.14.0",
    "numpy",
    "rich>=13.7.0",
    "rich-argparse>=1.5.2",
    "pip>=24.2",
    "pywin32>=306; platform_system=='Windows'",
]

[project.optional-dependencies]
llama = [
    "llama-cpp-python>=0.2.85",
]

[tool.pdm]
distribution = false
[tool.pdm.dev-dependencies]
dev = ["ruff>=0.4", "pyright>=1.1"]
[tool.rye]
dev-dependencies = ["ruff>=0.4", "pyright>=1.1"]

[tool.pdm.resolution]
allow-prereleases = false

[[tool.pdm.source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true

[tool.pyright]
include = ["bench", "generate"]
exclude = ["vendor"]
typeCheckingMode = "strict"
useLibraryCodeForTypes = true
reportMissingTypeStubs = "none"
reportUnknownArgumentType = "none"
reportUnknownLambdaType = "none"
reportUnknownMemberType = "none"
reportUnnecessaryIsInstance = "none"
reportUnnecessaryCast = "none"
reportUnnecessaryComparison = "none"
reportUnknownVariableType = "none"
reportIncompatibleMethodOverride = "none"
reportMissingParameterType = "none"

[tool.ruff]
output-format = "pylint"
line-length = 120
exclude = [
    "vendor",
]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "W",
    "ANN",
    "ASYNC",
    "SIM",
    "PIE",
    "S",
    "B",
    "A",
    "C4",
    "ERA",
    "T20",
    "PT",
    "PLC",
    "PLE",
    "PLW",
    "Q",
    "I",
    "UP",
    "DTZ",
    "RUF",
]
ignore = [
    "ERA001",
    "SIM115",
    "T201",
    "ANN401",
    "S101",
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "single"
docstring-quotes = "double"
avoid-escape = false

[tool.ruff.lint.isort]
section-order = [
    "future",
    "first-party",
    "local-folder",
    "standard-library",
    "third-party",
]
lines-after-imports = 2
lines-between-types = 1

[tool.ruff.format]
quote-style = "single"
indent-style = "space"

[tool.setuptools]
py-modules = []
